#include <iostream> 
#include <queue> 
using namespace std; 


class stackusingtwoqueues{ 

    private: 

    queue<int> queue1 , queue2; 

public: 

// push operation 

void push(int value) { 

    queue1.push(value); 

    cout << " pushed: "<< value << endl; 

} 

// pop operation 

void pop() { 

    if (queue1 . empty()) { 

        cout <<"stack is empty! cannot pop."<< endl; 

        return; 

    } 

    // move all elements except the last one to queue2 

    while (queue1.size() > 1) { 

        queue2.push(queue1.front()); 

        queue1.pop(); 

        } 


        // last element is the "top" of the stack 

        cout<< "popped:" << queue1.front()<< endl; 

        queue1.pop(); 


        // swap the roles of queue1 or queue2 

 

        swap(queue1 , queue2); 

    } 
    // top operation 

    int top(){ 

        if(queue1.empty()) { 

            cout<<"stack is empty!"<< endl; 

            return -1; 

            } 

            // move all elemnts except the last one to queue2 

            while (queue1.size() > 1) { 

                queue2.push(queue1.front()); 

                queue1.pop(); 

            } 

            // get the last element 

            int topvalue = queue1.front(); 

            queue2.push(topvalue);  

            queue1.pop(); 

            // swap the rokles  of queue1 and queue2 

            swap(queue1 , queue2); 

            cout << " top: " << topvalue<< endl; 

            return topvalue; 

            } 

            bool isEmpty(){ 

                return queue1.empty(); 
            } 
        }; 

 int main(){ 

    stackusingtwoqueues stack; 

stack.push(10); 
stack.push(20); 
stack.push(30); 
stack.top(); 
stack.pop(); 
stack.top(); 
stack.pop(); 
stack.pop(); 
stack.pop(); 

return 0; 

} 